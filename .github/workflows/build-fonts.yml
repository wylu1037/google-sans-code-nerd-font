name: Build Google Sans Code Nerd Fonts

on:
  push:
    branches: [ main ]
    paths:
      - 'data/google-sans-code/**'
      - '.github/workflows/build-fonts.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'data/google-sans-code/**'
      - '.github/workflows/build-fonts.yml'
  workflow_dispatch:

jobs:
  build-fonts:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install FontForge and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y fontforge python3-fontforge
        python -c "import fontforge; print('FontForge version:', fontforge.version())"
        
    - name: Download Nerd Font Patcher
      run: |
        mkdir -p tools
        cd tools
        curl -L https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FontPatcher.zip -o FontPatcher.zip
        unzip FontPatcher.zip
        chmod +x font-patcher
        ls -la
        
    - name: Create output directory
      run: |
        mkdir -p output/patched-fonts
        
    - name: Patch fonts
      run: |
        cd tools
        echo "Starting font processing..."
        
        # Process all static font files
        for font_file in ../data/google-sans-code/static/*.ttf; do
          if [ -f "$font_file" ]; then
            echo "Processing: $(basename "$font_file")"
            fontforge -script font-patcher "$font_file" \
              --complete \
              --outputdir ../output/patched-fonts \
              --quiet
          fi
        done
        
        # Show processing results
        echo "Processed font files:"
        ls -la ../output/patched-fonts/
        
    - name: Verify patched fonts
      run: |
        cd output/patched-fonts
        echo "Verifying font file integrity..."
        
        font_count=$(find . -name "*.ttf" | wc -l)
        echo "Generated font file count: $font_count"
        
        if [ $font_count -eq 0 ]; then
          echo "Error: No font files generated"
          exit 1
        fi
        
        # Check each font file size
        for font in *.ttf; do
          if [ -f "$font" ]; then
            size=$(stat -c%s "$font")
            echo "$font: ${size} bytes"
            
            # Font files should be larger than 1MB (will be larger with icons)
            if [ $size -lt 1048576 ]; then
              echo "Warning: $font may be incomplete (less than 1MB)"
            fi
          fi
        done
        
    - name: Create release archive
      run: |
        cd output
        
        # Create font info file
        cat > patched-fonts/README.txt << 'EOL'
        Google Sans Code Nerd Font
        ==========================
        
        This package contains Google Sans Code Nerd Font versions with 3600+ programming-related icons.
        
        Font files included:
        - Support for all original weights (Light, Regular, Medium, SemiBold, Bold, ExtraBold)
        - Italic variants included
        - Complete Nerd Font icon set added
        
        Installation:
        1. Extract all .ttf files
        2. Double-click font files to install to system
        3. Select GoogleSansCodeNerdFont family in terminal or editor
        
        More info: https://github.com/$GITHUB_REPOSITORY
        EOL
        
        echo "Build time: $(date)" >> patched-fonts/README.txt
        
        # Create release package
        zip -r "GoogleSansCodeNerdFont-$(date +%Y%m%d-%H%M).zip" patched-fonts/
        
        echo "Release package created:"
        ls -la *.zip
        
    - name: Upload patched fonts
      uses: actions/upload-artifact@v4
      with:
        name: GoogleSansCodeNerdFont-${{ github.run_number }}
        path: output/patched-fonts/
        retention-days: 90
        
    - name: Upload release archive
      uses: actions/upload-artifact@v4
      with:
        name: GoogleSansCodeNerdFont-Release-${{ github.run_number }}
        path: output/*.zip
        retention-days: 180